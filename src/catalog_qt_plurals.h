
//
// This file contains list of supported languages and their plural forms for Qt tools.
// Produced via `lupdate -list-languages`, with some manual corrections.
//

// Code generated with scripts/extract-plural-forms-qt.py begins here

    { "aa", "nplurals=2; plural=(n != 1);" },
    { "ab", "nplurals=2; plural=(n != 1);" },
    { "af", "nplurals=2; plural=(n != 1);" },
    { "am", "nplurals=2; plural=(n != 1);" },
    { "ar", "nplurals=6; plural=(n==0 ? 0 : n==1 ? 1 : n==2 ? 2 : (n%100>=3 && n%100<=10) ? 3 : n%100>=11 ? 4 : 5);" },
    { "as", "nplurals=2; plural=(n != 1);" },
    { "az", "nplurals=2; plural=(n != 1);" },
    { "ba", "nplurals=2; plural=(n != 1);" },
    { "be", "nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);" },
    { "bg", "nplurals=2; plural=(n != 1);" },
    { "bn", "nplurals=2; plural=(n != 1);" },
    { "bo", "nplurals=1; plural=0;" },
    { "br", "nplurals=2; plural=(n > 1);" },
    { "bs", "nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);" },
    { "ca", "nplurals=2; plural=(n != 1);" },
    { "co", "nplurals=2; plural=(n != 1);" },
    { "cs", "nplurals=3; plural=((n==1) ? 0 : (n>=2 && n<=4) ? 1 : 2);" },
    { "cy", "nplurals=5; plural=(n==0 ? 0 : n==1 ? 1 : (n>=2 && n<=5) ? 2 : n==6 ? 3 : 4);" },
    { "da", "nplurals=2; plural=(n != 1);" },
    { "de", "nplurals=2; plural=(n != 1);" },
    { "dv", "nplurals=3; plural=(n==1 ? 0 : n==2 ? 1 : 2);" },
    { "dz", "nplurals=1; plural=0;" },
    { "el", "nplurals=2; plural=(n != 1);" },
    { "en", "nplurals=2; plural=(n != 1);" },
    { "es", "nplurals=2; plural=(n != 1);" },
    { "et", "nplurals=2; plural=(n != 1);" },
    { "eu", "nplurals=2; plural=(n != 1);" },
    { "fa", "nplurals=1; plural=0;" },
    { "fi", "nplurals=2; plural=(n != 1);" },
    { "fil", "nplurals=2; plural=(n > 1);" },
    { "fo", "nplurals=2; plural=(n != 1);" },
    { "fr", "nplurals=2; plural=(n > 1);" },
    { "fur", "nplurals=2; plural=(n != 1);" },
    { "fy", "nplurals=2; plural=(n != 1);" },
    { "ga", "nplurals=3; plural=(n==1 ? 0 : n==2 ? 1 : 2);" },
    { "gd", "nplurals=4; plural=(n==1 || n==11) ? 0 : (n==2 || n==12) ? 1 : (n > 2 && n < 20) ? 2 : 3;" },
    { "gl", "nplurals=2; plural=(n != 1);" },
    { "gn", "nplurals=1; plural=0;" },
    { "gu", "nplurals=2; plural=(n != 1);" },
    { "gv", "nplurals=3; plural=(n==1 ? 0 : n==2 ? 1 : 2);" },
    { "ha", "nplurals=2; plural=(n != 1);" },
    { "he", "nplurals=2; plural=(n != 1);" },
    { "hi", "nplurals=2; plural=(n != 1);" },
    { "hr", "nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);" },
    { "hu", "nplurals=1; plural=0;" },
    { "hy", "nplurals=2; plural=(n > 1);" },
    { "id", "nplurals=1; plural=0;" },
    { "ie", "nplurals=2; plural=(n != 1);" },
    { "is", "nplurals=2; plural=(n%10==1 && n%100!=11 ? 0 : 1);" },
    { "it", "nplurals=2; plural=(n != 1);" },
    { "iu", "nplurals=3; plural=(n==1 ? 0 : n==2 ? 1 : 2);" },
    { "ja", "nplurals=1; plural=0;" },
    { "jv", "nplurals=1; plural=0;" },
    { "ka", "nplurals=2; plural=(n != 1);" },
    { "kk", "nplurals=2; plural=(n != 1);" },
    { "kl", "nplurals=2; plural=(n != 1);" },
    { "km", "nplurals=2; plural=(n != 1);" },
    { "kn", "nplurals=2; plural=(n != 1);" },
    { "ko", "nplurals=1; plural=0;" },
    { "ks", "nplurals=2; plural=(n != 1);" },
    { "ku", "nplurals=2; plural=(n != 1);" },
    { "kw", "nplurals=2; plural=(n != 1);" },
    { "ky", "nplurals=2; plural=(n != 1);" },
    { "la", "nplurals=2; plural=(n != 1);" },
    { "lb", "nplurals=2; plural=(n != 1);" },
    { "lg", "nplurals=2; plural=(n != 1);" },
    { "ln", "nplurals=2; plural=(n != 1);" },
    { "lo", "nplurals=2; plural=(n != 1);" },
    { "lt", "nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && (n%100<10 || n%100>=20) ? 1 : 2);" },
    { "lv", "nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n != 0 ? 1 : 2);" },
    { "mg", "nplurals=2; plural=(n != 1);" },
    { "mi", "nplurals=3; plural=(n==1 ? 0 : n==2 ? 1 : 2);" },
    { "mk", "nplurals=3; plural=(n%100==1 ? 0 : n%100==2 ? 1 : 2);" },
    { "ml", "nplurals=2; plural=(n != 1);" },
    { "mn", "nplurals=2; plural=(n != 1);" },
    { "mr", "nplurals=2; plural=(n != 1);" },
    { "ms", "nplurals=1; plural=0;" },
    { "mt", "nplurals=4; plural=(n==1 ? 0 : (n==0 || (n%100>=1 && n%100<=10)) ? 1 : (n%100>=11 && n%100<=19) ? 2 : 3);" },
    { "my", "nplurals=1; plural=0;" },
    { "nb", "nplurals=2; plural=(n != 1);" },
    { "ne", "nplurals=2; plural=(n != 1);" },
    { "nl", "nplurals=2; plural=(n != 1);" },
    { "nn", "nplurals=2; plural=(n != 1);" },
    { "nso", "nplurals=2; plural=(n != 1);" },
    { "oc", "nplurals=2; plural=(n != 1);" },
    { "om", "nplurals=1; plural=0;" },
    { "or", "nplurals=2; plural=(n != 1);" },
    { "pa", "nplurals=2; plural=(n != 1);" },
    { "pl", "nplurals=3; plural=(n==1 ? 0 : n%10>=2 && n%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);" },
    { "ps", "nplurals=2; plural=(n != 1);" },
    { "pt", "nplurals=2; plural=(n > 1);" },
    { "pt-BR", "nplurals=2; plural=(n > 1);" },
    { "pt-PT", "nplurals=2; plural=(n != 1);" },
    { "qu", "nplurals=2; plural=(n != 1);" },
    { "rm", "nplurals=2; plural=(n != 1);" },
    { "rn", "nplurals=2; plural=(n != 1);" },
    { "ro", "nplurals=3; plural=(n==1 ? 0 : (n==0 || (n%100 > 0 && n%100 < 20)) ? 1 : 2);" },
    { "ru", "nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);" },
    { "rw", "nplurals=2; plural=(n != 1);" },
    { "sa", "nplurals=3; plural=(n==1 ? 0 : n==2 ? 1 : 2);" },
    { "sd", "nplurals=2; plural=(n != 1);" },
    { "se", "nplurals=3; plural=(n==1 ? 0 : n==2 ? 1 : 2);" },
    { "si", "nplurals=2; plural=(n != 1);" },
    { "sk", "nplurals=3; plural=((n==1) ? 0 : (n>=2 && n<=4) ? 1 : 2);" },
    { "sl", "nplurals=4; plural=(n%100==1 ? 0 : n%100==2 ? 1 : n%100==3 || n%100==4 ? 2 : 3);" },
    { "sn", "nplurals=2; plural=(n != 1);" },
    { "so", "nplurals=2; plural=(n != 1);" },
    { "sq", "nplurals=2; plural=(n != 1);" },
    { "sr", "nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);" },
    { "ss", "nplurals=2; plural=(n != 1);" },
    { "st", "nplurals=2; plural=(n != 1);" },
    { "su", "nplurals=1; plural=0;" },
    { "sv", "nplurals=2; plural=(n != 1);" },
    { "sw", "nplurals=2; plural=(n != 1);" },
    { "ta", "nplurals=2; plural=(n != 1);" },
    { "te", "nplurals=2; plural=(n != 1);" },
    { "tg", "nplurals=2; plural=(n != 1);" },
    { "th", "nplurals=1; plural=0;" },
    { "ti", "nplurals=2; plural=(n > 1);" },
    { "tk", "nplurals=2; plural=(n != 1);" },
    { "tn", "nplurals=2; plural=(n != 1);" },
    { "to", "nplurals=2; plural=(n != 1);" },
    { "tr", "nplurals=1; plural=0;" },
    { "ts", "nplurals=2; plural=(n != 1);" },
    { "tt", "nplurals=1; plural=0;" },
    { "ug", "nplurals=2; plural=(n != 1);" },
    { "uk", "nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);" },
    { "ur", "nplurals=2; plural=(n != 1);" },
    { "uz", "nplurals=2; plural=(n != 1);" },
    { "vi", "nplurals=1; plural=0;" },
    { "wa", "nplurals=2; plural=(n > 1);" },
    { "wo", "nplurals=2; plural=(n != 1);" },
    { "xh", "nplurals=2; plural=(n != 1);" },
    { "yi", "nplurals=2; plural=(n != 1);" },
    { "yo", "nplurals=1; plural=0;" },
    { "za", "nplurals=1; plural=0;" },
    { "zh", "nplurals=1; plural=0;" },
    { "zu", "nplurals=2; plural=(n != 1);" },

// Code generated with scripts/extract-plural-forms-qt.py ends here





